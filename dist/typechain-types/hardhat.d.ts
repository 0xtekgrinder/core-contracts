/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "AccessControl",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AccessControl__factory>;
    getContractFactory(
      name: "AccessControlEnumerable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AccessControlEnumerable__factory>;
    getContractFactory(
      name: "IAccessControl",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAccessControl__factory>;
    getContractFactory(
      name: "IAccessControlEnumerable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAccessControlEnumerable__factory>;
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "Pausable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Pausable__factory>;
    getContractFactory(
      name: "PullPayment",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PullPayment__factory>;
    getContractFactory(
      name: "ERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721__factory>;
    getContractFactory(
      name: "IERC721Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Metadata__factory>;
    getContractFactory(
      name: "IERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721__factory>;
    getContractFactory(
      name: "IERC721Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Receiver__factory>;
    getContractFactory(
      name: "Escrow",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Escrow__factory>;
    getContractFactory(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "Accountant",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Accountant__factory>;
    getContractFactory(
      name: "ERC721License",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721License__factory>;
    getContractFactory(
      name: "ETHExpirationCollector",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ETHExpirationCollector__factory>;
    getContractFactory(
      name: "ETHPurchaser",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ETHPurchaser__factory>;
    getContractFactory(
      name: "GeoWebCoordinate",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GeoWebCoordinate__factory>;
    getContractFactory(
      name: "GeoWebCoordinatePath",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GeoWebCoordinatePath__factory>;
    getContractFactory(
      name: "GeoWebParcel",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GeoWebParcel__factory>;
    getContractFactory(
      name: "ILicenseValidator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ILicenseValidator__factory>;
    getContractFactory(
      name: "MockAccountant",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockAccountant__factory>;
    getContractFactory(
      name: "MockCollector",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockCollector__factory>;
    getContractFactory(
      name: "MockERC721License",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockERC721License__factory>;
    getContractFactory(
      name: "MockLicenseValidator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockLicenseValidator__factory>;
    getContractFactory(
      name: "MockParcel",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockParcel__factory>;
    getContractFactory(
      name: "SimpleETHClaimer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SimpleETHClaimer__factory>;

    getContractAt(
      name: "AccessControl",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AccessControl>;
    getContractAt(
      name: "AccessControlEnumerable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AccessControlEnumerable>;
    getContractAt(
      name: "IAccessControl",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAccessControl>;
    getContractAt(
      name: "IAccessControlEnumerable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAccessControlEnumerable>;
    getContractAt(
      name: "Ownable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "Pausable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Pausable>;
    getContractAt(
      name: "PullPayment",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PullPayment>;
    getContractAt(
      name: "ERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721>;
    getContractAt(
      name: "IERC721Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Metadata>;
    getContractAt(
      name: "IERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721>;
    getContractAt(
      name: "IERC721Receiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Receiver>;
    getContractAt(
      name: "Escrow",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Escrow>;
    getContractAt(
      name: "ERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165>;
    getContractAt(
      name: "IERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "Accountant",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Accountant>;
    getContractAt(
      name: "ERC721License",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721License>;
    getContractAt(
      name: "ETHExpirationCollector",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ETHExpirationCollector>;
    getContractAt(
      name: "ETHPurchaser",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ETHPurchaser>;
    getContractAt(
      name: "GeoWebCoordinate",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GeoWebCoordinate>;
    getContractAt(
      name: "GeoWebCoordinatePath",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GeoWebCoordinatePath>;
    getContractAt(
      name: "GeoWebParcel",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GeoWebParcel>;
    getContractAt(
      name: "ILicenseValidator",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ILicenseValidator>;
    getContractAt(
      name: "MockAccountant",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockAccountant>;
    getContractAt(
      name: "MockCollector",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockCollector>;
    getContractAt(
      name: "MockERC721License",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockERC721License>;
    getContractAt(
      name: "MockLicenseValidator",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockLicenseValidator>;
    getContractAt(
      name: "MockParcel",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockParcel>;
    getContractAt(
      name: "SimpleETHClaimer",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SimpleETHClaimer>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
