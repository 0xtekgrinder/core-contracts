"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MockParcel__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "uint64",
                name: "",
                type: "uint64",
            },
            {
                internalType: "uint256[]",
                name: "",
                type: "uint256[]",
            },
        ],
        name: "build",
        outputs: [
            {
                internalType: "uint256",
                name: "newParcelId",
                type: "uint256",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "nextId",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
const _bytecode = "0x60806040526000805534801561001457600080fd5b50610164806100246000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063461d9a211461003b57806361b8ce8c14610060575b600080fd5b61004e610049366004610081565b610069565b60405190815260200160405180910390f35b61004e60005481565b60005461007781600161010a565b6000559392505050565b600080600060408486031215610095578283fd5b833567ffffffffffffffff80821682146100ad578485fd5b909350602085013590808211156100c2578384fd5b818601915086601f8301126100d5578384fd5b8135818111156100e3578485fd5b8760208260051b85010111156100f7578485fd5b6020830194508093505050509250925092565b6000821982111561012957634e487b7160e01b81526011600452602481fd5b50019056fea26469706673582212206ae34b00bced51a76e02afa91b6d42bd8685f0928571cc35fa43d2ff44b478ff64736f6c63430008040033";
const isSuperArgs = (xs) => xs.length > 1;
class MockParcel__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
        this.contractName = "MockParcel";
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.MockParcel__factory = MockParcel__factory;
MockParcel__factory.bytecode = _bytecode;
MockParcel__factory.abi = _abi;
