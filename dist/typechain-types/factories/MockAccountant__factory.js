"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MockAccountant__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_perSecondFeeNumerator",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "_perSecondFeeDenominator",
                type: "uint256",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        name: "contributionRates",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "perSecondFeeDenominator",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "perSecondFeeNumerator",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "id",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "newRate",
                type: "uint256",
            },
        ],
        name: "setContributionRate",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
const _bytecode = "0x608060405234801561001057600080fd5b5060405161018438038061018483398101604081905261002f9161003d565b600091909155600155610060565b6000806040838503121561004f578182fd5b505080516020909101519092909150565b6101158061006f6000396000f3fe6080604052348015600f57600080fd5b506004361060455760003560e01c806279c6e914604a5780634d0265b3146064578063935cc61d146081578063c6f253ab146089575b600080fd5b605260005481565b60405190815260200160405180910390f35b6052606f36600460a8565b60026020526000908152604090205481565b605260015481565b60a6609436600460bf565b60009182526002602052604090912055565b005b60006020828403121560b8578081fd5b5035919050565b6000806040838503121560d0578081fd5b5050803592602090910135915056fea26469706673582212203b2899e66596530078a35ad91b099351e86bd393ce066a25bc9af840719a29fe64736f6c63430008040033";
const isSuperArgs = (xs) => xs.length > 1;
class MockAccountant__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
        this.contractName = "MockAccountant";
    }
    deploy(_perSecondFeeNumerator, _perSecondFeeDenominator, overrides) {
        return super.deploy(_perSecondFeeNumerator, _perSecondFeeDenominator, overrides || {});
    }
    getDeployTransaction(_perSecondFeeNumerator, _perSecondFeeDenominator, overrides) {
        return super.getDeployTransaction(_perSecondFeeNumerator, _perSecondFeeDenominator, overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.MockAccountant__factory = MockAccountant__factory;
MockAccountant__factory.bytecode = _bytecode;
MockAccountant__factory.abi = _abi;
