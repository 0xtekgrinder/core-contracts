"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MockLicenseValidator__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_truthyValue",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "_defaultStartDate",
                type: "uint256",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        name: "invalidStartDate",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "id",
                type: "uint256",
            },
        ],
        name: "isValid",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "truthyValue",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
const _bytecode = "0x608060405234801561001057600080fd5b5060405161014a38038061014a83398101604081905261002f9161003d565b600091909155600155610060565b6000806040838503121561004f578182fd5b505080516020909101519092909150565b60dc8061006e6000396000f3fe6080604052348015600f57600080fd5b5060043610603c5760003560e01c8063a3f8d382146041578063e8159ad814605c578063f577a50014606e575b600080fd5b604960005481565b6040519081526020015b60405180910390f35b60496067366004608f565b5060015490565b60806079366004608f565b6000541490565b60405190151581526020016053565b600060208284031215609f578081fd5b503591905056fea2646970667358221220632ddc79d0585c6a5e3fac3e676d153af30f34c4c82eb868820562ca2dd9f0a364736f6c63430008040033";
const isSuperArgs = (xs) => xs.length > 1;
class MockLicenseValidator__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
        this.contractName = "MockLicenseValidator";
    }
    deploy(_truthyValue, _defaultStartDate, overrides) {
        return super.deploy(_truthyValue, _defaultStartDate, overrides || {});
    }
    getDeployTransaction(_truthyValue, _defaultStartDate, overrides) {
        return super.getDeployTransaction(_truthyValue, _defaultStartDate, overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.MockLicenseValidator__factory = MockLicenseValidator__factory;
MockLicenseValidator__factory.bytecode = _bytecode;
MockLicenseValidator__factory.abi = _abi;
